<?php

// autoload_real.php generated by Composer

class ComposerAutoloaderInitIncludePath
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

        spl_autoload_register(array('ComposerAutoloaderInitIncludePath', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitIncludePath', 'loadClassLoader'));

        $vendorDir = dirname(__DIR__);
        $baseDir = dirname($vendorDir);

        $map = require __DIR__ . '/autoload_namespaces.php';
        foreach ($map as $namespace => $path) {
            $loader->set($namespace, $path);
        }

        $classMap = require __DIR__ . '/autoload_classmap.php';
        if ($classMap) {
            $loader->addClassMap($classMap);
        }

        $loader->setUseIncludePath(true);
        spl_autoload_register(array('ComposerAutoloaderInitIncludePath', 'autoload'), true, true);

        $loader->register(true);

        return $loader;
    }

    public static function autoload($class)
    {
        $dir = dirname(dirname(__DIR__)) . '/';
        $autoloadPsrZero = array (  'Main\\Foo' => '',  'Main\\Bar' => '',  'Main\\Boo' => 'altroot/',);
        foreach ($autoloadPsrZero as $prefix => $prefixPath) {
            if (0 !== strpos($class, $prefix)) {
                continue;
            }
            $path = $dir . strtr( substr_replace( $class, $prefixPath, 0, strlen( $prefix ) ), '\\', DIRECTORY_SEPARATOR ) . '.php';
            if (!$path = stream_resolve_include_path($path)) {
                return false;
            }
            require $path;

            return true;
        }
    }
}
